{"version":3,"sources":["../../../_dummy/live-parser/parser/src/Card.js","../../../_dummy/live-parser/parser/src/TableCell.js","../../../_dummy/live-parser/parser/src/App.js","../../../_dummy/live-parser/parser/src/index.js"],"names":["MaterialCardWithImageAndTitle","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","entry","react_default","a","createElement","View","style","styles","root","cardBody","Image","cardItemImagePlace","source","uri","image","bodyContent","Text","titleStyle","name","subtitleStyle","kitchenMeta","flexDirection","justifyContent","dishMeta","rating","isVegetarian","dishPreparationTime","price","actionBody","TouchableOpacity","actionButton1","actionText1","tags","join","actionButton2","actionText2","Component","StyleSheet","create","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","backgroundColor","elevation","borderRadius","padding","paddingTop","flex","fontSize","color","paddingBottom","lineHeight","opacity","marginLeft","marginTop","TableCell","_ref","item","index","Card_MaterialCardWithImageAndTitle","App","_this","state","text","jsonString","o","JSON","parse","e","_this2","container","Platform","OS","borderColor","borderWidth","minHeight","tryParseJSON","FlatList","data","list","renderItem","src_TableCell","contentContainerStyle","defineProperty","TextInput","onChangeText","setState","value","multiline","editable","alignItems","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.b23e459e.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { View, StyleSheet, Text, Image, TouchableOpacity } from \"react-native\";\nexport default class MaterialCardWithImageAndTitle extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const { entry } = this.props;\n    return (\n      <View style={[styles.root, this.props.style]}>\n        <View style={styles.cardBody}>\n          <Image\n            style={styles.cardItemImagePlace}\n            source={{ uri: entry.image }}\n          />\n          <View style={styles.bodyContent}>\n            <Text style={styles.titleStyle}>{entry.name}</Text>\n            <Text style={styles.subtitleStyle}>{entry.kitchenMeta.name}</Text>\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Text style={styles.subtitleStyle}>{entry.dishMeta.rating}</Text>\n              <Text style={styles.subtitleStyle}>{entry.dishMeta.isVegetarian ? \"Veg\" : \"Non-Veg\"}</Text>\n            </View>\n            <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n              <Text style={styles.subtitleStyle}>{entry.dishMeta.dishPreparationTime}</Text>\n              <Text style={styles.subtitleStyle}>{entry.dishMeta.price}</Text>\n            </View>\n          </View>\n        </View>\n        <View style={styles.actionBody}>\n          <TouchableOpacity style={styles.actionButton1}>\n            <Text style={styles.actionText1}>{entry.tags.join(', ')}</Text>\n          </TouchableOpacity>\n          <TouchableOpacity style={styles.actionButton2}>\n            <Text style={styles.actionText2}>Add Button</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    );\n  }\n}\nconst styles = StyleSheet.create({\n  root: {\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    backgroundColor: 'white',\n    elevation: 5,\n    borderRadius: 4,\n  },\n  cardBody: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\"\n  },\n  bodyContent: {\n    padding: 16,\n    paddingTop: 24,\n    flex: 1,\n  },\n  titleStyle: {\n\n    fontSize: 24,\n    color: \"#000\",\n    paddingBottom: 12\n  },\n  subtitleStyle: {\n\n    fontSize: 14,\n    color: \"#000\",\n    lineHeight: 16,\n    opacity: 0.5\n  },\n  cardItemImagePlace: {\n    backgroundColor: \"#ccc\",\n    // height: 80,\n    flex: 0.5,\n    marginLeft: 8,\n    marginTop: 8,\n  },\n  actionBody: {\n    padding: 8,\n    flexDirection: \"row\",\n    justifyContent: 'space-between',\n  },\n  actionButton1: {\n    padding: 8,\n    height: 36\n  },\n  actionText1: {\n    fontSize: 14,\n    color: \"#000\",\n    opacity: 0.9\n  },\n  actionButton2: {\n    padding: 8,\n    height: 36\n  },\n  actionText2: {\n    fontSize: 14,\n    color: \"#000\",\n    opacity: 0.9\n  }\n});\n","import React from 'react';\nimport { View } from 'react-native';\nimport MaterialCardWithImageAndTitle from './Card';\n\nconst TableCell = ({ item, index }) => {\n  return (\n    <View style={{ flex: 1, padding: 16, backgroundColor: 'white', }}>\n      <MaterialCardWithImageAndTitle entry={item} />\n    </View>\n  );\n};\n\nexport default TableCell;","/**\n * Sample React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n * @flow\n */\n\nimport React, { Component } from 'react';\nimport { StyleSheet, TextInput, View, FlatList, Platform, Text } from 'react-native';\nimport TableCell from './TableCell';\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      text: `\n      {\n        \"list\": [\n          {\n            \"type\": \"dish\",\n            \"image\": \"https://source.unsplash.com/random\",\n            \"identifier\": \"some_unique_identifier_of_this_entry1\",\n            \"tags\": [\n              \"aloo\",\n              \"tamatar\",\n              \"tarbooj\",\n              \"khana\",\n              \"peena\"\n            ],\n            \"name\":\"Dish 1\",\n            \"kitchenMeta\": {\n              \"kitchenIdentifier\": \"some_uniqe_identifier_for_kitchen\",\n              \"location\": {\n                \"latitude\": \"10000.1010110\",\n                \"longitude\": \"10000.1010110\"\n              },\n              \"name\": \"Amrood ki dukaan\"\n            },\n            \"dishMeta\": {\n              \"identifier\": \"we can ignore this if this is same as 'identifier' in root object\",\n              \"rating\": \"1.0|2.0|3.0|4.0|5.0\",\n              \"dishPreparationTime\": \"20 (in minutes)\",\n              \"isVegetarian\": false,\n              \"price\": \"1000000.00\"\n            }\n          },\n          {\n            \"type\": \"dish\",\n            \"image\": \"https://source.unsplash.com/random\",\n            \"identifier\": \"some_unique_identifier_of_this_entry2\",\n            \"tags\": [\n              \"aloo\",\n              \"tamatar\",\n              \"tarbooj\",\n              \"khana\",\n              \"peena\"\n            ],\n            \"name\":\"Dish 2\",\n            \"kitchenMeta\": {\n              \"kitchenIdentifier\": \"some_uniqe_identifier_for_kitchen\",\n              \"location\": {\n                \"latitude\": \"10000.1010110\",\n                \"longitude\": \"10000.1010110\"\n              },\n              \"name\": \"Amrood ki dukaan\"\n            },\n            \"dishMeta\": {\n              \"identifier\": \"we can ignore this if this is same as 'identifier' in root object\",\n              \"rating\": \"1.0|2.0|3.0|4.0|5.0\",\n              \"dishPreparationTime\": \"20 (in minutes)\",\n              \"isVegetarian\": false,\n              \"price\": \"1000000.00\"\n            }\n          }\n        ]\n      }\n      `\n    };\n\n  }\n\n  tryParseJSON(jsonString) {\n    try {\n      var o = JSON.parse(jsonString);\n\n      // Handle non-exception-throwing cases:\n      // Neither JSON.parse(false) or JSON.parse(1234) throw errors, hence the type-checking,\n      // but... JSON.parse(null) returns null, and typeof null === \"object\", \n      // so we must check for that, too. Thankfully, null is falsey, so this suffices:\n      if (o && typeof o === \"object\") {\n        return o;\n      }\n    }\n    catch (e) { }\n\n    return false;\n  };\n\n  render() {\n    return (\n      <View style={styles.container}>\n        <View\n          style={{ flex: Platform.OS === 'web' ? 0.5 : 1.0, paddingTop: Platform.OS === 'web' ? 120 : 210, padding: Platform.OS === 'web' ? 16 : 0, }}\n        >\n          <View style={{ flex: 1, borderColor: Platform.OS === 'web' ? 'black' : null, borderWidth: Platform.OS === 'web' ? 1 : null, minHeight: '100%', }}>\n            {\n              this.tryParseJSON(this.state.text) ? <FlatList\n                style={{ flex: 1, paddingTop: Platform.OS === 'web' ? 0 : 8 }}\n                data={JSON.parse(this.state.text).list}\n                renderItem={({ item, index }) => <TableCell index={index} item={item} />}\n                contentContainerStyle={{ paddingBottom: Platform.OS === 'web' ? 0 : 120 }}\n              /> : <Text>JSON is Not Valid</Text>\n            }\n\n          </View>\n        </View>\n        {\n          Platform.OS === 'web' ?\n            <View\n              style={{ flex: 0.5, height: '100%', padding: 16, height: '100%' }}\n            >\n              <TextInput\n                style={{ height: '100%', borderColor: 'gray', borderWidth: 1, padding: 2, height: 650 }}\n                onChangeText={(text) => this.setState({ text })}\n                value={this.state.text}\n                multiline={true}\n                editable={true}\n              />\n            </View> : null\n        }\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF',\n    flexDirection: 'row'\n  },\n});\n","import { AppRegistry } from 'react-native';\nimport App from './App'\n\nAppRegistry.registerComponent('parser', () => App);\nAppRegistry.runApplication('parser', { rootTag: document.getElementById('app') });"],"sourceRoot":""}